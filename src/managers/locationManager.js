// Generated by CoffeeScript 2.7.0
var LocationManager

import {fromAddress, geocode, RequestType, setKey} from 'react-geocode'

export default LocationManager = {
    getCoordsFromLocation: async function (location) {
        setKey(process.env.REACT_GOOGLE_MAPS_API_KEY)
        await fromAddress(location).then(function ({results}) {
            return (location = results[0].geometry.location)
        })
        return location
    },
    getAddressFromLatLng: async function (_lat, _lng) {
        var address, result
        address = ''
        setKey(process.env.REACT_GOOGLE_MAPS_API_KEY)
        result = await geocode(RequestType.LATLNG, `${_lat},${_lng}`)
        address = result.results[0].formatted_address
        return address
    },
    getAddress: function () {
        return new Promise(function (resolve, reject) {
            var address
            setKey(process.env.REACT_GOOGLE_MAPS_API_KEY)
            address = ''
            if (navigator.geolocation) {
                return navigator.geolocation.getCurrentPosition(async function (position) {
                    var pos, result
                    pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude,
                    }
                    result = await geocode(RequestType.LATLNG, `${pos.lat},${pos.lng}`)
                    address = result.results[0].formatted_address
                    return resolve(address)
                })
            }
        })
    },
}

//# sourceMappingURL=locationManager.js.map